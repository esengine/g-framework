name: Build and Release
on:
  push:
    branches:
      - main
jobs:
  build-and-release:
    name: Build and Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Check Changes
        id: check_changes
        run: |
          set -e
          last_commit=$(git log -1 --format="%H")
          changed_files=$(git diff --name-only $last_commit HEAD)
          echo "Changed files: $changed_files"
          if echo "$changed_files" | grep -qE '^(source\/bin|source\\bin)\/.*\.(js|ts)$'; then
            echo "Changes in source/bin detected. Proceeding with release."
          else
            echo "No changes in source/bin detected. Skipping release."
            echo ::set-output name=skip::true
          fi
      - name: Use Node.js 10.20.1
        if: ${{ !steps.check_changes.outputs.skip }}
        uses: actions/setup-node@v3
        with:
          node-version: 10.20.1
      - name: Install zip
        if: ${{ !steps.check_changes.outputs.skip }}
        run: sudo apt-get install -y zip
      - name: Create zip
        if: ${{ !steps.check_changes.outputs.skip }}
        run: zip -r bin.zip source/bin/
      - name: Get Current Tag
        if: ${{ !steps.check_changes.outputs.skip }}
        id: current_tag
        uses: actions/github-script@v4
        with:
          script: |
            const { data: tags } = await github.repos.listTags({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 1
            });
            return tags.length ? tags[0].name : 'v0.0.0';
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Increment Version
        if: ${{ !steps.check_changes.outputs.skip }}
        id: increment_version
        run: echo ::set-output name=tag::$(echo ${{ steps.current_tag.outputs.result }} | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
      - name: Get Latest Commit
        if: ${{ !steps.check_changes.outputs.skip }}
        id: latest_commit
        uses: actions/github-script@v4
        with:
          script: |
            const { data: commit } = await github.repos.getCommit({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
            });
            return commit.commit.message;
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release
        if: ${{ !steps.check_changes.outputs.skip }}
        id: create_release
        uses: actions/create-release@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.increment_version.outputs.tag }}
          release_name: Release ${{ steps.increment_version.outputs.tag }}
          body: |
            # Release ${{ steps.increment_version.outputs.tag }}
            最近的提交记录: ${{ steps.latest_commit.outputs.result }} # 添加最近的提交记录
            这是一个包含 bin 文件夹内容的 release。
          draft: false
          prerelease: false
      - name: Upload Release Asset
        if: ${{ !steps.check_changes.outputs.skip }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_path: ./bin.zip
          asset_name: bin.zip
          asset_content_type: application/zip
          upload_url: ${{ steps.create_release.outputs.upload_url }}
